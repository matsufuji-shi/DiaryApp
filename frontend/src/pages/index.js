import Head from 'next/head';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';

export default function Homes() {
  const [lists, setLists] = useState([]);
  const [error, setError] = useState(null);  // エラーメッセージ用のステートを追加

  useEffect(() => {
    fetch('http://localhost:3001/api/diaries')
      .then(res => res.json())
      .then(data => setLists(data))
      .catch(err => console.error('データ取得エラー:', err));
  }, []);

  const router = useRouter();

  const handleDelete = async (id) => {  // idを引数として受け取るように変更
    const url = `http://localhost:3001/api/diaries/${id}`;
  
    try {
      const res = await fetch(url, {
        method: 'DELETE',
      });
  
      if (res.ok) {
        setLists(lists.filter(post => post.id !== id));  // 削除後、リストを更新
        router.push('/'); // 削除成功したらトップへ
      } else {
        const err = await res.json();
        setError({ global: err.message });
      }
    } catch (err) {
      console.error(err);
      setError({ global: 'サーバーエラーが発生しました' });
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <h1>日記一覧</h1>
      <Link href={'/customers/new'}><button>新規作成</button></Link>

      {/* エラーメッセージがある場合は表示 */}
      {error && <div style={{ color: 'red' }}>{error.global}</div>}

      <ul>
        {lists.map((post) => (
          <li key={post.id}>
            <div>
              <p>{post.title} - {post.date}</p>
              <Link href={`/lists/${post.id}`}><button>詳細</button></Link>
              <button onClick={() => handleDelete(post.id)}>削除</button> {/* idを渡す */}
            </div>
          </li>
        ))}
      </ul>
    </>
  );
}